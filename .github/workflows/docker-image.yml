name: Docker Image CI

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read   
env:
  ECS_SERVICE: app-service
  ECS_CLUSTER: ecs-cluster
  ECS_TASK_DEFINITION: app-task-definition
  CONTAINER_NAME: app
  IMAGE_REPOSITORY: pranay1717/flask-login
  IMAGE_TAG: ${{ github.run_number }}

jobs:

  build:

    runs-on: ubuntu-latest
    environment: Test

    steps:
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build-image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ github.run_number }}
            ${{ env.IMAGE_REPOSITORY }}:latest
          run: |
            echo "image=$IMAGE_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

